def solution(k, d):
    answer = 0
    # x, y값의 최대범위 구하면
    # range(d+1) 이 안에서 k로 나눠떨어지는수
    l = [i for i in range(d + 1) if i % k == 0]


# # 면적이용
    # # x*y에 들어가는 총 점 수는 
    # sqr = len(l) ** 2
    # PI = 3.141592

    # # 사각형점 : 원안점 = 사각형면적 : 원/4면적일거같은데
    # # 그럼 원안점 * 사각형면적 = 사각형점 * 원/4면적
    # # 원안점 = (사각형점 * 원면적/4) / 사각형면적
    # answer = (sqr * (d * d * PI / 4)) / (d * d)
    # # 점이 고르게 분포한게 아니라 안되는거같다


# # 반복문2개
    # for x in l:
    #     for y in l:
    #         if x**2 + y**2 <= d**2:
    #             answer += 1
    #         else: break # 이거 넣으니까 6.5점 추가...ㅠ
    # # 시간초과 실패 포문두개는 무조건 시간초과인거같다

# 다른사람플이
    for i in range(0, d+1, k): # l을 구하는 대신 3번째 요소로 k를 주면 k간격만큼 점프한다
        y = int((d*d - i*i) ** (1/2)) # y의 최대값을 구한다
        answer += (y // k + 1) # 그걸 k로 나누면 x=i일때 점의 수가 나오는데 0을 더해줘야하니까 +1을 한다. //는 몫을 구하는거
    # 이런생각은 어떻게하는거지ㅠㅠ



    return answer


print(solution(1, 4))